# For a nicer code, the menu and options could be built like the room options are. 

Function Invoke-OGDDialog-Frisdrankkoelkast{
    Clear-Host
    Show-header

    Write-Host $ActionMessage -ForegroundColor Green #Write the latest action to screen
    Write-Host

    If (($State.self.states) -contains "Drankje") {
        $global:ActionMessage = "Je hebt al een drankje in je hand. Er nog een nemen heeft geen toegevoegde waarde en beperkt je wel in het openen van deuren. Je bedenkt je en neemt niet nóg een blikje."
        Break
    } 
    
    $KoelkastOpties = @( #Create array of options
        @{ #Create hashtable with options properties
                ItemNumber = "1" #Give this item a number, to use later on
                ListName   = "7-Up" #Use to display the option in the menu
                InvName    = "een blikje 7-Up" #Name of the item while in inventory
            }, 
<#        @{ #Create hashtable with options properties
                ItemNumber = "2" #Give this item a number, to use later on
                ListName   = "Bitter lemon" #Use to display the option in the menu
                InvName    = "een blikje bitter lemon" #Name of the item while in inventory
            }, 
        @{ #Create hashtable with options properties
                ItemNumber = "3" #Give this item a number, to use later on
                ListName   = "Cassis" #Use to display the option in the menu
                InvName    = "een blikje cassis" #Name of the item while in inventory
            }, 
        @{ #Create hashtable with options properties
                ItemNumber = "4" #Give this item a number, to use later on
                ListName   = "Cola" #Use to display the option in the menu
                InvName    = "een blikje cola" #Name of the item while in inventory
            }, 
        @{ #Create hashtable with options properties
                ItemNumber = "5" #Give this item a number, to use later on
                ListName   = "Dr. Pepper" #Use to display the option in the menu
                InvName    = "een blikje Dr. Pepper" #Name of the item while in inventory
            }, 
        @{ #Create hashtable with options properties
                ItemNumber = "6" #Give this item a number, to use later on
                ListName   = "Fernandez" #Use to display the option in the menu
                InvName    = "een blikje Fernandez" #Name of the item while in inventory
            }, 
        @{ #Create hashtable with options properties
                ItemNumber = "7" #Give this item a number, to use later on
                ListName   = "Spa Intense" #Use to display the option in the menu
                InvName    = "een blikje Spa Intense" #Name of the item while in inventory
            }, 
        @{ #Create hashtable with options properties
                ItemNumber = "8" #Give this item a number, to use later on
                ListName   = "Sinas" #Use to display the option in the menu
                InvName    = "een blikje sinas" #Name of the item while in inventory
            }, 
        @{ #Create hashtable with options properties
                ItemNumber = "9" #Give this item a number, to use later on
                ListName   = "Tonic" #Use to display the option in the menu
                InvName    = "een blikje tonic" #Name of the item while in inventory
            }, #>
        @{ #Create hashtable with options properties
                ItemNumber = "10" #Give this item a number, to use later on
                ListName   = "Toch maar niets" #Use to display the option in the menu
                InvName    = "CODEFOUT" #Temporary line to see if this goes wrong
            }
    )

    $WriteOGDKoelkastOptiesSplat = @()
    foreach ($frisje in $KoelkastOpties) {
        $WriteOGDKoelkastOptiesSplat += $frisje.ListName
    }
###NIEUWE ONGETESTE CODE
    Write-OGDKoelkastOpties @WriteOGDKoelkastOptiesSplat
    $Koelkastkeuze = Read-Host "Wat wil je drinken?"
    if ($koelkastkeuze -in (1..9) ) { #This hits for the numbers 1 through 9
        $DitWilIk = $KoelkastOpties | Where-Object {$_.ItemNumber -eq $KoelkastKeuze }
        Write-Host "Een blikje $($DitwilIk.InvNAme) bevat suiker en water"
    }
    elseif ( $koelkastkeuze -eq '10') {
        # toekomstig
    }
    else {
        # DEFAULT, JE GROENE ERROR
    }

### /NIEUWE ONGETESTE CODE

<#    switch ($Koelkastkeuze) { #Process the input and take action accordingly
        {1..9 -contains $_}{ #This hits for the numbers 1 through 9
            foreach ($BlikjesHashtable in $KoelkastOpties) {
                Write-Host "`$Koelkastkeuze = $Koelkastkeuze"
                Write-Host "`$BlikjesHashtable = " $BlikjesHashtable
                Write-Host "`$_ is: $_"
                Start-Sleep -s 2
                if ($Koelkastkeuze -eq $BlikjesHashtable.ItemNumber) {
                    Write-Host $BlikjesHashtable.ListName
                    Start-Sleep -s 2
                }else{
                    Write-Host "Geen hit"
                    Start-Sleep -s 2
                }

            }
        } #End of switch choice 1-9
        '10'{
        #
        }
        default{
            $global:ActionMessage = "Ongeldig commando, probeer het nog eens." #Do this if the entered option isn't hit by any of the rules
        }
    }
#>

<#    switch ($Koelkastkeuze) {
        '1'{
            $global:ActionMessage = "Je pakt een koud blikje 7-up uit de koelkast."
            $state.self.inventory += 'een blikje 7-up'
            $state.self.states += 'Drankje'
        }
        '2'{
            $global:ActionMessage = "Je pakt een koud blikje bitter lemon uit de koelkast."
            $state.self.inventory += 'een blikje bitter lemon'
            $state.self.states += 'Drankje'
        }
        '3'{
            $global:ActionMessage = "Je pakt een koud blikje cassis uit de koelkast."
            $state.self.inventory += 'een blikje cassis'
            $state.self.states += 'Drankje'
        }
        '4'{
            $global:ActionMessage = "Je pakt een koud blikje cola uit de koelkast."
            $state.self.inventory += 'een blikje cola'
            $state.self.states += 'Drankje'
        }
        '5'{
            $global:ActionMessage = "Je pakt een koud blikje Dr. Pepper uit de koelkast."
            $state.self.inventory += 'een blikje Dr. Pepper'
            $state.self.states += 'Drankje'
        }
        '6'{
            $global:ActionMessage = "Je pakt een koud blikje Fernandez uit de koelkast."
            $state.self.inventory += 'een blikje Fernandez'
            $state.self.states += 'Drankje'
        }
        '7'{
            $global:ActionMessage = "Je pakt een koud blikje sinas uit de koelkast."
            $state.self.inventory += 'een blikje sinas'
            $state.self.states += 'Drankje'
        }
        '8'{
            $global:ActionMessage = "Je pakt een koud blikje Spa intense uit de koelkast."
            $state.self.inventory += 'een blikje Spa intense'
            $state.self.states += 'Drankje'
        }
        '9'{
            $global:ActionMessage = "Je pakt een koud blikje tonic uit de koelkast."
            $state.self.inventory += 'een blikje tonic'
            $state.self.states += 'Drankje'
        }
        '10'{
            $global:ActionMessage = "Je bedenkt je en neemt geen blikje uit de koelkast. Je doet de deur weer dicht."
        }
        Default{
            $global:ActionMessage = "Ongeldig commando, probeer het nog eens." #Do this if the number entered is greater than the length of the array MenuOptions
            Invoke-OGDDialog-Frisdrankkoelkast
        }
    }
#>

}
