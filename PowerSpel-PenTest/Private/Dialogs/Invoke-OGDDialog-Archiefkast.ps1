#While renaming to use for specific dialogs, don't forget to rename the call to itself on line ~59
function Invoke-OGDDialog-Archiefkast {
    param(
        #Create a marker to show this is the main menu (otherwise the added sub menu will recursively be added in every sub menu)
        $MainMenu = $true,
        #Create the entire menu from nested hashtables
        [hashtable]$menu = @{
            "Ga alsof het je werk is voor de archiefkast staan en blader door de dossiers" = @{
                "Blader door de tab met J-N"  = @{
                    "Pak een willekeurig dik dossier en kijk wat er in de map zit" = {
                        Write-Host "Plotseling tikt er iemand op je schouder, die je vraagt wat je met die vertrouwelijke documenten aan het doen bent. Betrapt!" -ForegroundColor Green
                        Start-Sleep -Seconds 3
                        $State.self.ending = 4
                        $state.location = @(99,99,99)
                        Break
                    } #End kijken
                    "Blader door de dossiers naar een interessante naam" = @{
                        "Pak het dossier van Jos Haarbos" = {
                            $state.self.inventory += 'het personeelsdossier van Jos Haarbos'
                            $global:ActionMessage = "Je grijpt het dossier van Jos Haarbos en moffelt het weg onder je arm. Nu snel wegwezen, hier!"
                            $State.counter.Verdenking_archiefkast = 3
                            If ($State.self.Penetrations -notcontains "personeelsdossier bemachtigd") { #Only do this if $State.self.Penetrations does not contain the accomplishment you try to add
                                $State.self.Penetrations = $State.self.Penetrations += "personeelsdossier bemachtigd" #Add the current penetration option to the list of successfull 
                                $state.self.PenetrationScore = $state.self.PenetrationScore + 400
                                $state.self.PenetrationsAmount = $state.self.PenetrationsAmount + 1
                            }
                            Break
                        } #End dossier
                        "Pak het dossier van Karel Karelse" = {
                            $state.self.inventory += 'het personeelsdossier van Karel Karelse'
                            $global:ActionMessage = "Je grijpt het dossier van Karel Karelse en moffelt het weg onder je arm. Nu snel wegwezen, hier!"
                            $State.counter.Verdenking_archiefkast = 3
                            If ($State.self.Penetrations -notcontains "personeelsdossier bemachtigd") { #Only do this if $State.self.Penetrations does not contain the accomplishment you try to add
                                $State.self.Penetrations = $State.self.Penetrations += "personeelsdossier bemachtigd" #Add the current penetration option to the list of successfull 
                                $state.self.PenetrationScore = $state.self.PenetrationScore + 400
                                $state.self.PenetrationsAmount = $state.self.PenetrationsAmount + 1
                            }
                            Break
                        } #End dossier
                    } #End bladeren
                } #End J-N
                "Blader door de tab met M-P"  = @{
                    "Pak een willekeurig dik dossier en kijk wat er in de map zit" = {
                        Write-Host "Plotseling tikt er iemand op je schouder, die je vraagt wat je met die vertrouwelijke documenten aan het doen bent. Betrapt!" -ForegroundColor Green
                        Start-Sleep -Seconds 3
                        $State.self.ending = 4
                        $state.location = @(99,99,99)
                        Break
                    } #End kijken
                    "Blader door de dossiers naar een interessante naam" = @{
                        "Pak het dossier van Marco Marcussen" = {
                            $state.self.inventory += 'het personeelsdossier van Marco Marcussen'
                            $global:ActionMessage = "Je grijpt het dossier van Marco Marcussen en moffelt het weg onder je arm. Nu snel wegwezen, hier!"
                            $State.counter.Verdenking_archiefkast = 3
                            If ($State.self.Penetrations -notcontains "personeelsdossier bemachtigd") { #Only do this if $State.self.Penetrations does not contain the accomplishment you try to add
                                $State.self.Penetrations = $State.self.Penetrations += "personeelsdossier bemachtigd" #Add the current penetration option to the list of successfull 
                                $state.self.PenetrationScore = $state.self.PenetrationScore + 400
                                $state.self.PenetrationsAmount = $state.self.PenetrationsAmount + 1
                            }
                            Break
                        } #End dossier
                        "Pak het dossier van Nienke Nijkerk" = {
                            $state.self.inventory += 'het personeelsdossier van Nienke Nijkerk'
                            $global:ActionMessage = "Je grijpt het dossier van Nienke Nijkerk en moffelt het weg onder je arm. Nu snel wegwezen, hier!"
                            $State.counter.Verdenking_archiefkast = 3
                            If ($State.self.Penetrations -notcontains "personeelsdossier bemachtigd") { #Only do this if $State.self.Penetrations does not contain the accomplishment you try to add
                                $State.self.Penetrations = $State.self.Penetrations += "personeelsdossier bemachtigd" #Add the current penetration option to the list of successfull 
                                $state.self.PenetrationScore = $state.self.PenetrationScore + 400
                                $state.self.PenetrationsAmount = $state.self.PenetrationsAmount + 1
                            }
                            Break
                        } #End dossier
                    } #End bladeren
                } #End M-P
                "Blader door de tab met Q-U"  = @{
                    "Pak een willekeurig dik dossier en kijk wat er in de map zit" = {
                        Write-Host "Plotseling tikt er iemand op je schouder, die je vraagt wat je met die vertrouwelijke documenten aan het doen bent. Betrapt!" -ForegroundColor Green
                        Start-Sleep -Seconds 3
                        $State.self.ending = 4
                        $state.location = @(99,99,99)
                        Break
                    } #End kijken
                    "Blader door de dossiers naar een interessante naam" = @{
                        "Pak het dossier van Rik Rikkert" = {
                            $state.self.inventory += 'het personeelsdossier van Rik Rikkert'
                            $global:ActionMessage = "Je grijpt het dossier van Rik Rikkert en moffelt het weg onder je arm. Nu snel wegwezen, hier!"
                            $State.counter.Verdenking_archiefkast = 3
                            If ($State.self.Penetrations -notcontains "personeelsdossier bemachtigd") { #Only do this if $State.self.Penetrations does not contain the accomplishment you try to add
                                $State.self.Penetrations = $State.self.Penetrations += "personeelsdossier bemachtigd" #Add the current penetration option to the list of successfull 
                                $state.self.PenetrationScore = $state.self.PenetrationScore + 400
                                $state.self.PenetrationsAmount = $state.self.PenetrationsAmount + 1
                            }
                            Break
                        } #End dossier
                        "Pak het dossier van Sabine Saab" = {
                            $state.self.inventory += 'het personeelsdossier van Sabine Saab'
                            $global:ActionMessage = "Je grijpt het dossier van Sabine Saab en moffelt het weg onder je arm. Nu snel wegwezen, hier!"
                            $State.counter.Verdenking_archiefkast = 3
                            If ($State.self.Penetrations -notcontains "personeelsdossier bemachtigd") { #Only do this if $State.self.Penetrations does not contain the accomplishment you try to add
                                $State.self.Penetrations = $State.self.Penetrations += "personeelsdossier bemachtigd" #Add the current penetration option to the list of successfull 
                                $state.self.PenetrationScore = $state.self.PenetrationScore + 400
                                $state.self.PenetrationsAmount = $state.self.PenetrationsAmount + 1
                            }
                            Break
                        } #End dossier
                    } #End bladeren
                } #End Q-U
                "Blader door de tab met V-Z"  = @{
                    "Pak een willekeurig dik dossier en kijk wat er in de map zit" = {
                        Write-Host "Plotseling tikt er iemand op je schouder, die je vraagt wat je met die vertrouwelijke documenten aan het doen bent. Betrapt!" -ForegroundColor Green
                        Start-Sleep -Seconds 3
                        $State.self.ending = 4
                        $state.location = @(99,99,99)
                        Break
                    } #End kijken
                    "Blader door de dossiers naar een interessante naam" = @{
                        "Pak het dossier van Xavier Xavi" = {
                            $state.self.inventory += 'het personeelsdossier van Xavier Xavi'
                            $global:ActionMessage = "Je grijpt het dossier van Xavier Xavi en moffelt het weg onder je arm. Nu snel wegwezen, hier!"
                            $State.counter.Verdenking_archiefkast = 3
                            If ($State.self.Penetrations -notcontains "personeelsdossier bemachtigd") { #Only do this if $State.self.Penetrations does not contain the accomplishment you try to add
                                $State.self.Penetrations = $State.self.Penetrations += "personeelsdossier bemachtigd" #Add the current penetration option to the list of successfull 
                                $state.self.PenetrationScore = $state.self.PenetrationScore + 400
                                $state.self.PenetrationsAmount = $state.self.PenetrationsAmount + 1
                            }
                            Break
                        } #End dossier
                        "Pak het dossier van Wander Wallinga" = {
                            $state.self.inventory += 'het personeelsdossier van Wander Wallinga'
                            $global:ActionMessage = "Je grijpt het dossier van Wander Wallinga en moffelt het weg onder je arm. Nu snel wegwezen, hier!"
                            $State.counter.Verdenking_archiefkast = 3
                            If ($State.self.Penetrations -notcontains "personeelsdossier bemachtigd") { #Only do this if $State.self.Penetrations does not contain the accomplishment you try to add
                                $State.self.Penetrations = $State.self.Penetrations += "personeelsdossier bemachtigd" #Add the current penetration option to the list of successfull 
                                $state.self.PenetrationScore = $state.self.PenetrationScore + 400
                                $state.self.PenetrationsAmount = $state.self.PenetrationsAmount + 1
                            }
                            Break
                        } #End dossier
                    } #End bladeren
                } #End V-Z
            } #End bladeren
            "Loop casual langs de archiefkast en pak het eerste dossier dat je te pakken krijgt" = {
                $state.self.inventory += 'het personeelsdossier van Jos Haarbos'
                $global:ActionMessage = "Je grijpt een dossier en moffelt het weg onder je arm. Nu snel wegwezen, hier!"
                $State.counter.Verdenking_archiefkast = 3
                If ($State.self.Penetrations -notcontains "personeelsdossier bemachtigd") { #Only do this if $State.self.Penetrations does not contain the accomplishment you try to add
                    $State.self.Penetrations = $State.self.Penetrations += "personeelsdossier bemachtigd" #Add the current penetration option to the list of successfull 
                    $state.self.PenetrationScore = $state.self.PenetrationScore + 400
                    $state.self.PenetrationsAmount = $state.self.PenetrationsAmount + 1
                }
                Break
            } #End loop langs
            "Laat de archiefkast voor wat hij is en loop door" = {
                $global:ActionMessage = "De pakkans bij de archiefkast is te groot, je besluit het risico niet te lopen."
                Break
            }
        } #End menu
    ) #End param
        
    #-------------------------
    #region Menu logic
    #-------------------------
    $ValidChoice = $false
    #Loop through the following until $ValidChoice is false
    If ($State.counter.Verdenking_archiefkast -ge 3) {
        $global:ActionMessage = "Het lijkt je geen goed idee om nog een keer bij de archiefkast te gaan staan, tussen al deze mensen"
        Break
    }

    while(-not $validChoice){
        #Build default screen components
        Clear-Host
        Show-Header
        Write-Host ""
        Write-Host $ActionMessage -ForegroundColor Green #Write the latest action to screen
        Write-Host ""

        #Fill variable with the entire first level of the menu hashtable.
        $keuzekeys = @($menu.Keys)
        $i = 1

        #Loop through all themenu options and write them to screen in a numbered list.
        foreach($key in $keuzekeys){
            Write-Host "${i}: $key"
            $i++
        }
        
        #Ask user for input (a number from the list)
        Write-Host ""
        $keuze = read-host "Selecteer optienummer"

        #Check the following and if it doesn't match, to go catch
        try{
            #Set selected item to the number imputted minus one (because a hashtable starts at 0)
            $keuzekey = $keuzekeys[$keuze-1]
            
            #Select item from menu, corresponding to the user input
            $GekozenActie = $menu.$keuzekey
            
            #All items in the menu are either hashtables (submenus) or scriptblocks (menu ends with executions). This checks for a hashtable and inputs that as new options for the next menu level
            if($GekozenActie -is [hashtable]){
                Invoke-OGDDialog-Archiefkast -menu $gekozenactie -MainMenu $false
            }
            
            #All items in the menu are either hashtables (submenus) or scriptblocks (menu ends with executions). This checks for a scriptblock and executes it.
            if($gekozenactie -is [scriptblock]){
                Invoke-Command -ScriptBlock $gekozenactie -NoNewScope
            }
        
            $ValidChoice = $true
        
        }catch{
         #If the option selected is neither leading to the next menu, nor a scriptblock, write error and go back in the try loop
         Write-Host 'Ongeldig commando, probeer het nog eens.'
         Start-Sleep -Seconds 1
        }
    } #End while loop
#endregion

} #End Invoke-OGDDialog-General