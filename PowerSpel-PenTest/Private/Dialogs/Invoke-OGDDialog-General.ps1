#While renaming to use for specific dialogs, don't forget to rename the call to itself on line ~59
function Invoke-OGDDialog-General {
    #Create the entire menu from nested hashtables
    [hashtable]$menu = @{
        "Kleuren" = @{
            "Rood"   = @{
                "Een brandweerauto"    = {Write-Host 'Een brandweerauto is rood'}
                "Een blikje Coca Cola" = {Write-Host 'Een blikje Coca Cola is rood'}
                "Bloed"                = {Write-Host 'Bloed is rood'}
            } #End Rood
            "Groen"  = {Write-Host 'Je kiest groen'}
            "Blauw"  = {Write-Host 'Je kiest blauw'}
        } #End Kleuren
        "Leesplankje" = @{
            "Aap"  = {Write-Host 'Een aap'}
            "Noot" = {Write-Host 'Een noot'}
            "Mies" = {Write-Host 'Miesje'}
        } #End Leesplankje
        "Getallen" = @{
            "Een"  = {Write-Host 'Een'}
            "Twee" = {Write-Host 'Twee'}
            "Drie" = {Write-Host 'Drie'}
        } #End Getallen
    } #End menu
        
    #-------------------------
    #region Menu logic
    #-------------------------
    $ValidChoice = $false
    #Loop through the following until $ValidChoice is false
    while(-not $validChoice){
        #Build default screen components
        Clear-Host
        Show-Header
        Write-Host ""
        Write-Host $ActionMessage -ForegroundColor Green #Write the latest action to screen
        Write-Host ""

        #Fill variable with the entire first level of the menu hashtable.
        $keuzekeys = @($menu.Keys)
        $i = 1

        #Loop through all themenu options and write them to screen in a numbered list.
        foreach($key in $keuzekeys){
            Write-Host "${i}: $key"
            $i++
        }
        
        #Ask user for input (a number from the list)
        $keuze = read-host "Selecteer optienummer"

        #Check the following and if it doesn't match, to go catch
        try{
            #Set selected item to the number imputted minus one (because a hashtable starts at 0)
            $keuzekey = $keuzekeys[$keuze-1]
            
            #Select item from menu, corresponding to the user input
            $GekozenActie = $menu.$keuzekey
            
            #All items in the menu are either hashtables (submenus) or scriptblocks (menu ends with executions). This checks for a hashtable and inputs that as new options for the next menu level
            if($GekozenActie -is [hashtable]){
                Invoke-OGDDialog-General -menu $gekozenactie
            }
            
            #All items in the menu are either hashtables (submenus) or scriptblocks (menu ends with executions). This checks for a scriptblock and executes it.
            if($gekozenactie -is [scriptblock]){
                Invoke-Command -ScriptBlock $gekozenactie -NoNewScope
            }
        
            $ValidChoice = $true
        
        }catch{
         #If the option selected is neither leading to the next menu, nor a scriptblock, write error and go back in the try loop
         Write-Host 'Ongeldig commando, probeer het nog eens.'
         Start-Sleep -Seconds 1
        }
    } #End while loop
#endregion

} #End Invoke-OGDDialog-General