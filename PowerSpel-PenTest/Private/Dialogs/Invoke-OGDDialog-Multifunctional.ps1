#While renaming to use for specific dialogs, don't forget to rename the call to itself on line ~59
function Invoke-OGDDialog-Multifunctional {
    param(
        #Create the entire menu from nested hashtables
        [hashtable]$menu = @{
            "Maak een kopie van je blote achterste." = {
                Write-Host "Je trekt je broek omlaag en gaat op de glasplaat zitten. Dat is waar het mis gaat..." -ForegroundColor Green
                Start-Sleep -Seconds 3
                $State.self.ending = 6
                $state.location = @(99,99,99)
                Break
            } #End kopie achterste
            "Maak een kopie van een willekeurig papier." = {
                $global:ActionMessage = "Je pakt een willekeurig stuk papier dat naast de multifunctional ligt en maakt er een kopietje van."
            } #End kopie papier
            "Probeer een kopie te mailen naar jezelf." = {
                If ($state.room.'070802'.'toegangspasje' -eq $true) {
                    $global:ActionMessage = "Je mailt een blanco kopietje naar jezelf, uit naam van Jos Haarbos. Deze mogelijkheid kan van pas komen als je vertrouwelijke papieren in handen krijgt."
                } Else {
                    $global:ActionMessage = "Je probeert het menu te openen, maar er wordt om authenticatie gevraagd en je komt er niet door."
                }
            } #End mailen
            "Iemand is zijn pas vergeten! Pak de toegangspas van de paslezer."  = {
                If ($state.self.inventory -notcontains 'een toegangspasje') {
                    $state.self.inventory += 'een toegangspasje'
                    $state.room.'070802'.'toegangspasje' = $false
                    $state.self.PenetrationScore = $state.self.PenetrationScore + 300
                    $state.self.PenetrationsAmount = $state.self.PenetrationsAmount + 1
                    $global:ActionMessage = "Je pakt het toegangspasje van de paslezer. Dit is waardevol!"
                    Break
                }
                $global:ActionMessage = "Je kijkt met een lege blik naar de paslezer en bedenkt je dat je het pasje net al hebt opgepakt."
            } #End pas pakken
        } #End menu
    ) #End param
        
    #-------------------------
    #region Menu logic
    #-------------------------
    $ValidChoice = $false
    #Loop through the following until $ValidChoice is false
    while(-not $validChoice){
        #Build default screen components
        Clear-Host
        Show-Header
        Write-Host ""
        Write-Host $ActionMessage -ForegroundColor Green #Write the latest action to screen
        Write-Host ""

        #Fill variable with the entire first level of the menu hashtable.
        $keuzekeys = @($menu.Keys)
        $i = 1

        #Loop through all themenu options and write them to screen in a numbered list.
        foreach($key in $keuzekeys){
            Write-Host "${i}: $key"
            $i++
        }
        
        #Ask user for input (a number from the list)
        Write-Host ""
        $keuze = read-host "Selecteer optienummer"

        #Check the following and if it doesn't match, to go catch
        try{
            #Set selected item to the number imputted minus one (because a hashtable starts at 0)
            $keuzekey = $keuzekeys[$keuze-1]
            
            #Select item from menu, corresponding to the user input
            $GekozenActie = $menu.$keuzekey
            
            #All items in the menu are either hashtables (submenus) or scriptblocks (menu ends with executions). This checks for a hashtable and inputs that as new options for the next menu level
            if($GekozenActie -is [hashtable]){
                Invoke-OGDDialog-Multifunctional -menu $gekozenactie
            }
            
            #All items in the menu are either hashtables (submenus) or scriptblocks (menu ends with executions). This checks for a scriptblock and executes it.
            if($gekozenactie -is [scriptblock]){
                Invoke-Command -ScriptBlock $gekozenactie -NoNewScope
            }
        
            $ValidChoice = $true
        
        }catch{
         #If the option selected is neither leading to the next menu, nor a scriptblock, write error and go back in the try loop
         Write-Host 'Ongeldig commando, probeer het nog eens.'
         Start-Sleep -Seconds 1
        }
    } #End while loop
#endregion

} #End Invoke-OGDDialog-General