# For a nicer code, the menu and options could be built like the room options are. 

Function Invoke-OGDDialog-Koelkast{
    Clear-Host
    Show-header

    Write-Host $ActionMessage -ForegroundColor Green #Write the latest action to screen
    Write-Host

    If (($State.self.states) -contains "Drankje") {
        $global:ActionMessage = "Je hebt al een drankje in je hand. Er nog een nemen heeft geen toegevoegde waarde en beperkt je wel in het openen van deuren. Je bedenkt je en neemt niet nog een blikje."
        Break
    } 
    
    $KoelkastOpties = @( #Create array of options
        @{ #Create hashtable with options properties
                ItemNumber = "1" #Give this item a number, to use later on
                ListName   = "7-Up" #Use to display the option in the menu
                InvName    = "een blikje 7-Up" #Name of the item while in inventory
            }, 
        @{ #Create hashtable with options properties
                ItemNumber = "2" #Give this item a number, to use later on
                ListName   = "Bitter lemon" #Use to display the option in the menu
                InvName    = "een blikje bitter lemon" #Name of the item while in inventory
            }, 
        @{ #Create hashtable with options properties
                ItemNumber = "3" #Give this item a number, to use later on
                ListName   = "Cassis" #Use to display the option in the menu
                InvName    = "een blikje cassis" #Name of the item while in inventory
            }, 
        @{ #Create hashtable with options properties
                ItemNumber = "4" #Give this item a number, to use later on
                ListName   = "Cola" #Use to display the option in the menu
                InvName    = "een blikje cola" #Name of the item while in inventory
            }, 
        @{ #Create hashtable with options properties
                ItemNumber = "5" #Give this item a number, to use later on
                ListName   = "Dr. Pepper" #Use to display the option in the menu
                InvName    = "een blikje Dr. Pepper" #Name of the item while in inventory
            }, 
        @{ #Create hashtable with options properties
                ItemNumber = "6" #Give this item a number, to use later on
                ListName   = "Fernandez" #Use to display the option in the menu
                InvName    = "een blikje Fernandez" #Name of the item while in inventory
            }, 
        @{ #Create hashtable with options properties
                ItemNumber = "7" #Give this item a number, to use later on
                ListName   = "Spa Intense" #Use to display the option in the menu
                InvName    = "een blikje Spa Intense" #Name of the item while in inventory
            }, 
        @{ #Create hashtable with options properties
                ItemNumber = "8" #Give this item a number, to use later on
                ListName   = "Sinas" #Use to display the option in the menu
                InvName    = "een blikje sinas" #Name of the item while in inventory
            }, 
        @{ #Create hashtable with options properties
                ItemNumber = "9" #Give this item a number, to use later on
                ListName   = "Tonic" #Use to display the option in the menu
                InvName    = "een blikje tonic" #Name of the item while in inventory
            },
        @{ #Create hashtable with options properties
                ItemNumber = "10" #Give this item a number, to use later on
                ListName   = "Toch maar niets" #Use to display the option in the menu
                InvName    = "CODEFOUT" #Temporary line to see if this goes wrong
            }
    ) #End of array of options

    $WriteOGDKoelkastOptiesSplat = @()
    foreach ($frisje in $KoelkastOpties) { #Create splat for Write0OGDKoelkastOpties, created from the array of hash tables $KoelkastOpties
        $WriteOGDKoelkastOptiesSplat += $frisje.ListName
    }

    Write-OGDKoelkastOpties @WriteOGDKoelkastOptiesSplat #Write the options for the Koelkast in a numbered menu
    $Koelkastkeuze = Read-Host "Wat wil je drinken?"
    if ($koelkastkeuze -in (1..9) ) { #This hits for the numbers 1 through 9
        $Optie = $KoelkastOpties | Where-Object {$_.ItemNumber -eq $KoelkastKeuze } #store the chosen option in a new variable
            $global:ActionMessage = "Je neemt een koud blikje $($Optie.ListName) uit de koelkast."
            $state.self.inventory += "$($Optie.InvName)" #Add the chosen item to inventory
            $State.self.states += "drankje" #Note that there is a drink somewhere in inventory, to prevent more drinks from being picked up
            Break
    }
    elseif ( $koelkastkeuze -eq '10') { #If 1-9 isn't hit, this will hit for option 10
        $global:ActionMessage = "Je bedenkt je en neemt geen blikje uit de koelkast." 
        Break
    }
    else { #If both 1-9 and 10 don't hit, it defaults to this
        $global:ActionMessage = "Ongeldig commando, probeer het nog eens." #Do this if the entered option isn't hit by any of the rules
        Break
    }
}
