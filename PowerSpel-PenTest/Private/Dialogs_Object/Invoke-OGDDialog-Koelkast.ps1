#While renaming to use for specific dialogs, don't forget to rename the call to itself on line ~59
function Invoke-OGDDialog-Koelkast {
    param(
        #Create a marker to show this is the main menu (otherwise the added sub menu will recursively be added in every sub menu)
        $MainMenu = $true,
        #Create the entire menu from nested hashtables
        [hashtable]$menu = @{
            "7-up" = {
                $state.self.inventory += 'een blikje 7-up'
                $state.self.states += 'Drankje'
                $global:ActionMessage = "Je neemt een koud blikje 7-up uit de koelkast."
                break
            } #End 7-up
            "Bitter lemon" = {
                $state.self.inventory += 'een blikje bitter lemon'
                $state.self.states += 'Drankje'
                $global:ActionMessage = "Je neemt een koud blikje bitter lemon uit de koelkast."
                break
            } #End bitter lemon
            "Cassis" = {
                $state.self.inventory += 'een blikje cassis'
                $state.self.states += 'Drankje'
                $global:ActionMessage = "Je neemt een koud blikje cassis uit de koelkast."
                break
            } #End cassis
            "Cola" = {
                $state.self.inventory += 'een blikje cola'
                $state.self.states += 'Drankje'
                $global:ActionMessage = "Je neemt een koud blikje cola uit de koelkast."
                break
            } #End cola
            "Dr. Pepper" = {
                $state.self.inventory += 'een blikje dr. Pepper'
                $state.self.states += 'Drankje'
                $global:ActionMessage = "Je neemt een koud blikje dr. Pepper uit de koelkast."
                break
            } #End dr. pepper
            "Fernandez" = {
                $state.self.inventory += 'een blikje fernandez'
                $state.self.states += 'Drankje'
                $global:ActionMessage = "Je neemt een koud blikje fernandez uit de koelkast."
                break
            } #End fernandez
            "Spa intense" = {
                $state.self.inventory += 'een blikje spa intense'
                $state.self.states += 'Drankje'
                $global:ActionMessage = "Je neemt een koud blikje spa intense uit de koelkast."
                break
            } #End spa intense
            "Sinas" = {
                $state.self.inventory += 'een blikje sinas'
                $state.self.states += 'Drankje'
                $global:ActionMessage = "Je neemt een koud blikje sinas uit de koelkast."
                break
            } #End sinas
            "Tonic" = {
                $state.self.inventory += 'een blikje tonic'
                $state.self.states += 'Drankje'
                $global:ActionMessage = "Je neemt een koud blikje tonic uit de koelkast."
                break
            } #End Tonic
            "Niets" = {
                $global:ActionMessage = "Je bedenkt je en neemt geen blikje uit de koelkast"
                break
            } #End niets
        } #End menu
    ) #End param
        
    #-------------------------
    #region Menu logic
    #-------------------------
    $ValidChoice = $false

    #Abort if there already is a drankje in inventory    
    If (($State.self.states) -contains "Drankje") {
        $global:ActionMessage = "Je hebt al een drankje in je hand. Er nog een nemen heeft geen toegevoegde waarde en beperkt je wel in het openen van deuren. Je bedenkt je en neemt niet nog een blikje."
        Break
    } 

    #Loop through the following until $ValidChoice is false
    while(-not $validChoice){
        #Build default screen components
        Clear-Host
        Show-Header
        Write-Host ""
        Write-Host $ActionMessage -ForegroundColor Green #Write the latest action to screen
        Write-Host ""

        #Fill variable with the entire first level of the menu hashtable.
        $keuzekeys = @($menu.Keys)
        $i = 1

        #Loop through all themenu options and write them to screen in a numbered list.
        foreach($key in $keuzekeys){
            Write-Host "${i}: $key"
            $i++
        }
        
        #Ask user for input (a number from the list)
        Write-Host ""
        $keuze = read-host "Selecteer optienummer"

        #Check the following and if it doesn't match, to go catch
        try{
            #Set selected item to the number imputted minus one (because a hashtable starts at 0)
            $keuzekey = $keuzekeys[$keuze-1]
            
            #Select item from menu, corresponding to the user input
            $GekozenActie = $menu.$keuzekey
            
            #All items in the menu are either hashtables (submenus) or scriptblocks (menu ends with executions). This checks for a hashtable and inputs that as new options for the next menu level
            if($GekozenActie -is [hashtable]){
                Invoke-OGDDialog-Koelkast -menu $gekozenactie -MainMenu $false
            }
            
            #All items in the menu are either hashtables (submenus) or scriptblocks (menu ends with executions). This checks for a scriptblock and executes it.
            if($gekozenactie -is [scriptblock]){
                Invoke-Command -ScriptBlock $gekozenactie -NoNewScope
            }
        
            $ValidChoice = $true
        
        }catch{
         #If the option selected is neither leading to the next menu, nor a scriptblock, write error and go back in the try loop
         Write-Host 'Ongeldig commando, probeer het nog eens.'
         Start-Sleep -Seconds 1
        }
    } #End while loop
#endregion

} #End Invoke-OGDDialog-General