function Show-OGDEnding {
    Param(
        $ScoreName1,
        $ScorePercentage1,
        $ScoreValue1,        
        $ScoreMaxValue1,
        $ScoreName2,
        $ScorePercentage2,
        $ScoreValue2,        
        $ScoreMaxValue2,
        $ScoreName3,
        $ScorePercentage3,
        $ScoreValue3,        
        $ScoreMaxValue3
    )

    #Determine time played
    $TimeEnd = (Get-Date)
    $Timespan = New-TimeSpan –Start $TimeStart –End $TimeEnd

    #Write header to screen
    Clear-Host
    Write-Host "   ____   _____ _____  " -ForegroundColor Magenta -NoNewline ;Write-Host "  _____                _             _   _      _            _   " -ForegroundColor Red
    Write-Host "  / __ \ / ____|  __ \ " -ForegroundColor Magenta -NoNewline ;Write-Host " |  __ \              | |           | | (_)    | |          | |  " -ForegroundColor Red
    Write-Host " | |  | | |  __| |  | |" -ForegroundColor Magenta -NoNewline ;Write-Host " | |__) |__ _ __   ___| |_ _ __ __ _| |_ _  ___| |_ ___  ___| |_ " -ForegroundColor Red
    Write-Host " | |  | | | |_ | |  | |" -ForegroundColor Magenta -NoNewline ;Write-Host " |  ___/ _ \ '_ \ / _ \ __| '__/ _` | __| |/ _ \ __/ _ \/ __| __|" -ForegroundColor Red
    Write-Host " | |__| | |__| | |__| |" -ForegroundColor Magenta -NoNewline ;Write-Host " | |  |  __/ | | |  __/ |_| | | (_| | |_| |  __/ ||  __/\__ \ |_ " -ForegroundColor Red
    Write-Host "  \____/ \_____|_____/ " -ForegroundColor Magenta -NoNewline ;Write-Host " |_|   \___|_| |_|\___|\__|_|  \__,_|\__|_|\___|\__\___||___/\__|" -ForegroundColor Red
    Start-Sleep 1
    Write-Host "                           _           _                        "
    Write-Host "                          (_)         | |                       "
    Write-Host "                       ___ _ _ __   __| |___  ___ ___  _ __ ___ "
    Write-Host "                      / _ \ | '_ \ / _` / __|/ __/ _ \| '__/ _ \"
    Write-Host "                     |  __/ | | | | (_| \__ \ (_| (_) | | |  __/"
    Write-Host "                      \___|_|_| |_|\__,_|___/\___\___/|_|  \___|"
    Write-Host
    Write-Host

    #Write the applicable ending to screen
    Start-Sleep 1
    Show-OGDEndingScenario -Ending $State.self.ending

    #Write animations for statistics to screen
    Start-Sleep 1
    Show-OGDScoreMeter -ScoreName $ScoreName1 -ScorePercentage $ScorePercentage1 -ScoreValue $ScoreValue1 -ScoreMaxValue $ScoreMaxValue1 #Show score of specified item
    Show-OGDScoreMeter -ScoreName $ScoreName2 -ScorePercentage $ScorePercentage2 -ScoreValue $ScoreValue2 -ScoreMaxValue $ScoreMaxValue2 #Show score of specified item
    Show-OGDScoreMeter -ScoreName $ScoreName3 -ScorePercentage $ScorePercentage3 -ScoreValue $ScoreValue3 -ScoreMaxValue $ScoreMaxValue3 #Show score of specified item
    
    #region Draw table with penetrations, accomplishments and items
    Write-Host ""
    Write-Host "**********************************************************************************************************************************"
    Write-Host "* Uitgebuite Penetratiemogelijkheden       * Behaalde prestaties                      * Bemachtigde items                        *"
    Write-Host "**********************************************************************************************************************************"
    
    #Line 1
    Write-Host "* " -NoNewline 
    Write-Host "$($State.self.penetrations[0])".padright(41) -ForegroundColor Cyan -NoNewline #Room for penetration
    Write-Host "* " -NoNewline
    Write-Host "$($State.self.accomplishments[0])".padright(41) -ForegroundColor Cyan -NoNewline #Room for accomplishment
    Write-Host "* " -NoNewline
    Write-Host "$($State.self.inventory[0])".padright(41) -ForegroundColor Cyan -NoNewline #Room for item
    Write-Host "*"

    #Line2
    Write-Host "* " -NoNewline 
    Write-Host "$($State.self.penetrations[1])".padright(41) -ForegroundColor Cyan -NoNewline #Room for penetration
    Write-Host "* " -NoNewline
    Write-Host "$($State.self.accomplishments[1])".padright(41) -ForegroundColor Cyan -NoNewline #Room for accomplishment
    Write-Host "* " -NoNewline
    Write-Host "$($State.self.inventory[1])".padright(41) -ForegroundColor Cyan -NoNewline #Room for item
    Write-Host "*"

    #Line3
    Write-Host "* " -NoNewline 
    Write-Host "$($State.self.penetrations[2])".padright(41) -ForegroundColor Cyan -NoNewline #Room for penetration
    Write-Host "* " -NoNewline
    Write-Host "$($State.self.accomplishments[2])".padright(41) -ForegroundColor Cyan -NoNewline #Room for accomplishment
    Write-Host "* " -NoNewline
    Write-Host "$($State.self.inventory[2])".padright(41) -ForegroundColor Cyan -NoNewline #Room for item
    Write-Host "*"

    #Line4
    Write-Host "* " -NoNewline 
    Write-Host "$($State.self.penetrations[3])".padright(41) -ForegroundColor Cyan -NoNewline #Room for penetration
    Write-Host "* " -NoNewline
    Write-Host "$($State.self.accomplishments[3])".padright(41) -ForegroundColor Cyan -NoNewline #Room for accomplishment
    Write-Host "* " -NoNewline
    Write-Host "$($State.self.inventory[3])".padright(41) -ForegroundColor Cyan -NoNewline #Room for item
    Write-Host "*"

    #Line5
    Write-Host "* " -NoNewline 
    Write-Host "$($State.self.penetrations[4])".padright(41) -ForegroundColor Cyan -NoNewline #Room for penetration
    Write-Host "* " -NoNewline
    Write-Host "$($State.self.accomplishments[4])".padright(41) -ForegroundColor Cyan -NoNewline #Room for accomplishment
    Write-Host "* " -NoNewline
    Write-Host "$($State.self.inventory[4])".padright(41) -ForegroundColor Cyan -NoNewline #Room for item
    Write-Host "*"

    #Line6
    Write-Host "* " -NoNewline 
    Write-Host "$($State.self.penetrations[5])".padright(41) -ForegroundColor Cyan -NoNewline #Room for penetration
    Write-Host "* " -NoNewline
    Write-Host "$($State.self.accomplishments[5])".padright(41) -ForegroundColor Cyan -NoNewline #Room for accomplishment
    Write-Host "* " -NoNewline
    Write-Host "$($State.self.inventory[5])".padright(41) -ForegroundColor Cyan -NoNewline #Room for item
    Write-Host "*"

    #Line7
    Write-Host "* " -NoNewline 
    Write-Host "$($State.self.penetrations[6])".padright(41) -ForegroundColor Cyan -NoNewline #Room for penetration
    Write-Host "* " -NoNewline
    Write-Host "$($State.self.accomplishments[6])".padright(41) -ForegroundColor Cyan -NoNewline #Room for accomplishment
    Write-Host "* " -NoNewline
    Write-Host "$($State.self.inventory[6])".padright(41) -ForegroundColor Cyan -NoNewline #Room for item
    Write-Host "*"

    #Line8
    Write-Host "* " -NoNewline 
    Write-Host "$($State.self.penetrations[7])".padright(41) -ForegroundColor Cyan -NoNewline #Room for penetration
    Write-Host "* " -NoNewline
    Write-Host "$($State.self.accomplishments[7])".padright(41) -ForegroundColor Cyan -NoNewline #Room for accomplishment
    Write-Host "* " -NoNewline
    Write-Host "$($State.self.inventory[7])".padright(41) -ForegroundColor Cyan -NoNewline #Room for item
    Write-Host "*"

    #Line9
    Write-Host "* " -NoNewline 
    Write-Host "$($State.self.penetrations[8])".padright(41) -ForegroundColor Cyan -NoNewline #Room for penetration
    Write-Host "* " -NoNewline
    Write-Host "$($State.self.accomplishments[8])".padright(41) -ForegroundColor Cyan -NoNewline #Room for accomplishment
    Write-Host "* " -NoNewline
    Write-Host "$($State.self.inventory[8])".padright(41) -ForegroundColor Cyan -NoNewline #Room for item
    Write-Host "*"

    Write-Host "**********************************************************************************************************************************"
    #endregion

    #Calculate scores
    [int]$ScorePenetration = $($state.self.PenetrationScore)
    [int]$ScoreAccomplishments = ($state.self.Accomplishments).count * 100
    [int]$ScoreEfficiency = ((54 - $state.Counter.roomvisits) * 10)
    [int]$ScoreBonus = 500
    [int]$FinalScore = $ScorePenetration + $ScoreAccomplishments 
    If ($ScoreEfficiency -lt 0 -eq 1) {$FinalScore += $ScoreEfficiency} #Only add this if there is a negative score
    If ($State.self.ending -eq 1) {$FinalScore += $ScoreBonus} #Only add this if the game ended with scenario 1

    #Show scores
    Write-Host ""
    Start-Sleep 1
    Write-Host "Je hebt $($Timespan.Minutes) minuten gespeeld" -NoNewline
    Write-Host ""
    Start-Sleep 1
    Write-Host "Score voor penetratieniveau: . . . . . . . . . . . . . $ScorePenetration"
    Write-Host "Score voor prestaties: . . . . . . . . . . . . . . . . $ScoreAccomplishments"
    If ($ScoreEfficiency -lt 0) { #Only show this is there is a negative score
        Write-Host "Aftrek voor meer gelopen stappen dan nodig:. . . . . . $ScoreEfficiency"
    } #End if
    if ($State.self.ending -eq 1) { #Only show this when there is a bonus
        Write-Host "Bonus voor het spel eindigen zonder betrapt te zijn: . $ScoreBonus"
    } #End if
    Write-Host "Eindscore: . . . . . . . . . . . . . . . . . . . . . . $FinalScore (max = 3300)" -ForegroundColor Yellow
    Write-Host ""
    Start-Sleep 1
    Write-Host "Bedankt voor het spelen!"
    Write-Host ""
    Start-Sleep 2
}


