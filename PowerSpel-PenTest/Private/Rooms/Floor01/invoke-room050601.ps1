function Invoke-Room050601 {
    $Global:RoomNumber = ([string]$MyInvocation.MyCommand).Substring(11) #Create a string (from the Function title) of 6 digits which represent the room number, to be used by other functions.

    $InvokeOGDRoomSplat = @{ #Create a hashtable to be used to give arguments to the function Invoke-OGDRoom in a readable format.
        RoomNumber = $RoomNumber #This is the room number, doh :).
        RoomTitle = '[Kantine - bar]' #This is the room title.
        RoomDescription = 'Dit gedeelte van de kantine ziet er uit als een hoop lol: een volledig ingerichte bar inclusief koffiezetapparaat vult de hele oostelijke wand. Er staat een trolley met meerdere halflege kratten bier. Verder staan er twee tafelvoetbaltafels, twee flipperkasten, een arcadekast en een photoplay. Aan de photoplay staat een jongen met zwart haar en een rood plukje Zwikken te spelen. Het moet fantastisch zijn om hier te werken! Richting het zuiden staat een deur die naar buiten leidt, zo te zien een dakterras.' #This is the room description.
        Exits = @{
            N = @(05,07,01) #Which room is located to the north. Use "(N)" for a locked door.
            #E = @(00,00,01) #Which room is located to the north. Use "(E)" for a locked door.
            S = @(05,05,01) #Which room is located to the north. Use "(S)" for a locked door.
            #W = @(00,00,01) #Which room is located to the north. Use "(W)" for a locked door.
            #U = @(00,00,00) #Which room is located to the north. Use "(U)" for a locked door.
            #D = @(00,00,00) #Which room is located to the north. Use "(D)" for a locked door.
       }
        ActionMessageNorth = "Je loopt richting het noorden."
        ActionMessageEast = "Je loopt richting het oosten."
        ActionMessageSouth = "Je loopt richting het zuiden."
        ActionMessageWest = "Je loopt richting het westen."
        ActionMessageUp = "Je loopt de trap op naar boven."
        ActionMessageDown = "Je loopt de trap af naar beneden."     
        RoomOptions = @( #Create array of options
            @{ #Create hashtable with options properties
                Argument      = 'Speel een spel op de MAME-kast.' #Use to display an action in the menu
                Test          = {$state.room.'050601'.'MAME-kast' -eq $true } #Use to check if the item is present (define in room.json)
                Invoke        = {Invoke-OGDDialog-MAME-kast} #Action to be executed when this option is chosen from the menu.
                ActionMessage = 'Je hebt lekker een spelletje gespeeld en gaat weer door met je opdracht.' #Use to fill the ActionMessage
                Description   = 'Tegen de muur staat een zelfgebouwde MAME-kast. Hij staat aan en is zo te zien klaar voor gebruik.' #Use to display the item in the room
            },
            @{ #Create hashtable with options properties
                Argument      = 'Maak gebruik van het koffiezetapparaat.' #Use to display an action in the menu
                Test          = {$state.room.'050601'.'koffiezetapparaat' -eq $true } #Use to check if the item is present (define in room.json)
                Invoke        = {Invoke-OGDDialog-Koffiezetapparaat} #Action to be executed when this option is chosen from the menu.
                ActionMessage = 'Je pakt een mok, zet hem onder het koffiezetapparaat en kijkt naar het bedieningspaneel.' #Use to fill the ActionMessage
                Description   = 'Op het aanrecht staat een koffiezetapparaat' #Use to display the item in the room
            },
            @{ #Create hashtable with options properties
                Argument      = 'Leg zet het bierflesje weg in de trolley.' #Use to display an action in the menu
                Test          = {$state.room.'050601'.'bierflesjewegzetten' -eq $true } #Use to check if the item is present (define in room.json)
                Invoke        = { #Use to remove the item from inventory and add it to the room
                    $state.room.'050601'.'bierflesjewegzetten' = $false
                    if ($($state.self.inventory).count -le 1) {
                        [array]$state.self.inventory = @()
                    } else {
                        [array]$state.self.inventory = $state.self.inventory | Where-Object {$_ -ne 'een leeg bierflesje'}
                    }
                    $state.self.Accomplishments += "voorbeeldwerknemer"
                }
                ActionMessage = 'Je zet het bierflesje weg in het krat op de trolley.' #Use to fill the ActionMessage
            },
            @{ #Create hashtable with options properties
                Argument      = 'Neem een blikje fris uit de koelkast.' #Use to display an action in the menu
                Test          = {$state.room.'050601'.'koelkast' -eq $true } #Use to check if the item is present (define in room.json)
                Invoke        = {Invoke-OGDDialog-koelkast} #Action to be executed when this option is chosen from the menu.
                ActionMessage = 'Je gaat voor de koelkast staan en kijkt door de glazen deur naar binnen.' #Use to fill the ActionMessage
                Description   = 'Tegen de muur staat een koelkast, goed gevuld met blikjes fris.' #Use to display the item in the room
            }
        ) #End of array of hash tables 
    }
    Invoke-OGDRoom @InvokeOGDRoomSplat #Start the room writing function, with the above array of items as arguments.
}
