function Invoke-OGDRoom {
    param(
        $RoomNumber,
        $RoomTitle,
        $RoomDescription,
        [hashtable]$Exits,
        $ActionMessageNorth,
        $ActionMessageEast,
        $ActionMessageSouth,
        $ActionMessageWest,
        $ActionMessageUp,
        $ActionMessageDown,
        [array]$RoomOptions
    )

    $State = Get-State
    $Global:MenuOptions = $null #Empty the array of menu options
    $WriteOGDOptionMenuSplat = @() #Create empty array for upcoming arguments for MenuOptions
    $writeOGDItemsSplat = @()
    $ExitsWithKey = $($Exits.Keys)-replace '[()]',''#Remove '(' and ')' from the exits, to show doors that are not locked

    Write-Host $ActionMessage -ForegroundColor Green #Write the latest action to screen
    Write-Host ""
    Write-Host $RoomTitle -ForegroundColor DarkBlue -BackgroundColor White #Write room title to screen
    Write-Host $RoomDescription #Write room description to screen
    if ($state.self.inventory -contains 'een toegangspasje') {
        Write-Exits $ExitsWithKey #Write room exits without locks to screen
    }Else{
        Write-Exits $Exits.Keys #Write room exits with locks to screen
    }

    foreach ($roomOption in $RoomOptions){ #Loop through the RoomOptions of the room, if present 
        $RoomTest = Invoke-Command -ScriptBlock $roomOption.test -NoNewScope #Fill $RoomTest with the check in the scriptblock of the RoomOption
        if($roomtest){ #Check if the option is valid (item is present in state) 
            $WriteOGDOptionMenuSplat += $roomOption.argument #Add option to choices
            if($roomOption.Description){
                $writeOGDItemsSplat += $roomOption.Description #Add option to room description
            }
        }
    }
    if(@($writeOGDItemsSplat).count -gt 0){ #If Descriptions are present
        Write-OGDItems @writeOGDItemsSplat #Write Descriptions to screen
    }

    if(@($WriteOGDOptionMenuSplat).count -gt 0){ #If Options are present
        Write-OGDOptionMenu @WriteOGDOptionMenuSplat #Write the option menu to screen, containing the beforementioned items or actions (if it's empty, don't display)
    }

    $Command = Read-Host "Wat wil je doen?" #Ask user for input

    switch ($Command) #Process the input and take action accordingly
    {
        'N'{
            If ($Exits.N){ #Check if N is an available option)
                $state.location = $Exits.N #Set location to the room north from this room
                $global:ActionMessage = $ActionMessageNorth #Fill the global ActionMessage with the text inside the appropriate variable
                $state.Counter.roomvisits ++ #Add 1 to the roomcounter
                Break
            }Else {
                If ($Exits.keys -contains "(N)") {
                    If ($state.self.inventory -contains 'een toegangspasje') {
                        $global:ActionMessage = "Je ontgrendelt de deur met het toegangspasje, opent hem en loopt er doorheen." #If the door is locked, display this
                        $state.location = $($Exits."(N)") #Set location to the room north from this room
                        $state.Counter.roomvisits ++ #Add 1 to the roomcounter
                        Break
                    }Else {
                        $global:ActionMessage = "De deur zit op slot, je kunt er nu niet door." #If the door is locked, display this
                        Break
                    }
                }Else {
                $global:ActionMessage = "Die kant kan je niet op." #If the exit is not present, display this
                Break
                }
            }
        }
        'E'{
            If ($Exits.E){ #Check if E is an available option)
                $state.location = $Exits.E #Set location to the room east from this room
                $global:ActionMessage = $ActionMessageEast #Fill the global ActionMessage with the text inside the appropriate variable
                $state.Counter.roomvisits ++ #Add 1 to the room counter
                Break
            }Else {
                If ($Exits.keys -contains "(E)") {
                    If ($state.self.inventory -contains 'een toegangspasje') {
                        $global:ActionMessage = "Je ontgrendelt de deur met het toegangspasje, opent hem en loopt er doorheen." #If the door is locked, display this
                        $state.location = $($Exits."(E)") #Set location to the room east from this room
                        $state.Counter.roomvisits ++ #Add 1 to the roomcounter
                        Break
                    }Else {
                        $global:ActionMessage = "De deur zit op slot, je kunt er nu niet door." #If the door is locked, display this
                        Break
                    }
                }Else {
                $global:ActionMessage = "Die kant kan je niet op." #If the exit is not present, display this
                Break
                }
            }
        }
        'S'{
             If ($Exits.S){ #Check if S is an available option)
                 $state.location = $Exits.S #Set location to the room south from this room
                 $global:ActionMessage = $ActionMessageSouth #Fill the global ActionMessage with the text inside the appropriate variable
                 $state.Counter.roomvisits ++ #Add 1 to the room counter
                 Break
             }Else {
                 If ($Exits.keys -contains "(S)") {
                     If ($state.self.inventory -contains 'een toegangspasje') {
                         $global:ActionMessage = "Je ontgrendelt de deur met het toegangspasje, opent hem en loopt er doorheen." #If the door is locked, display this
                         $state.location = $($Exits."(S)") #Set location to the room south from this room
                         $state.Counter.roomvisits ++ #Add 1 to the roomcounter
                         Break
                     }Else {
                         $global:ActionMessage = "De deur zit op slot, je kunt er nu niet door." #If the door is locked, display this
                         Break
                     }
                 }Else {
                 $global:ActionMessage = "Die kant kan je niet op." #If the exit is not present, display this
                 Break
                 }
             }
        }
        'W'{
           If ($Exits.W){ #Check if W is an available option)
               $state.location = $Exits.W #Set location to the room west from this room
               $global:ActionMessage = $ActionMessageWest #Fill the global ActionMessage with the text inside the appropriate variable
               $state.Counter.roomvisits ++ #Add 1 to the room counter
               Break
           }Else {
               If ($Exits.keys -contains "(W)") {
                   If ($state.self.inventory -contains 'een toegangspasje') {
                       $global:ActionMessage = "Je ontgrendelt de deur met het toegangspasje, opent hem en loopt er doorheen." #If the door is locked, display this
                       $state.location = $($Exits."(W)") #Set location to the room west from this room
                       $state.Counter.roomvisits ++ #Add 1 to the roomcounter
                       Break
                   }Else {
                       $global:ActionMessage = "De deur zit op slot, je kunt er nu niet door." #If the door is locked, display this
                       Break
                   }
               }Else {
               $global:ActionMessage = "Die kant kan je niet op." #If the exit is not present, display this
               Break
               }
           }
        }
        'U'{
            If ($Exits.U){ #Check if U is an available option)
                $state.location = $Exits.U #Set location to the room up from this room
                $global:ActionMessage = $ActionMessageUp #Fill the global ActionMessage with the text inside the appropriate variable
                $state.Counter.roomvisits ++ #Add 1 to the room counter
                Break
            }Else {
                If ($Exits.keys -contains "(U)") {
                    If ($state.self.inventory -contains 'een toegangspasje') {
                        $global:ActionMessage = "Je ontgrendelt de deur met het toegangspasje, opent hem en loopt er doorheen." #If the door is locked, display this
                        $state.location = $($Exits."(U)") #Set location to the room up from this room
                        $state.Counter.roomvisits ++ #Add 1 to the roomcounter
                        Break
                    }Else {
                        $global:ActionMessage = "De deur zit op slot, je kunt er nu niet door." #If the door is locked, display this
                        Break
                    }
                }Else {
                $global:ActionMessage = "Die kant kan je niet op." #If the exit is not present, display this
                Break
                }
            }
        }
        'D'{
            If ($Exits.D){ #Check if D is an available option)
                $state.location = $Exits.D #Set location to the room down from this room
                $global:ActionMessage = $ActionMessageDown #Fill the global ActionMessage with the text inside the appropriate variable
                $state.Counter.roomvisits ++ #Add 1 to the room counter
                Break
            }Else {
                If ($Exits.keys -contains "(D)") {
                    If ($state.self.inventory -contains 'een toegangspasje') {
                        $global:ActionMessage = "Je ontgrendelt de deur met het toegangspasje, opent hem en loopt er doorheen." #If the door is locked, display this
                        $state.location = $($Exits."(D)") #Set location to the room down from this room
                        $state.Counter.roomvisits ++ #Add 1 to the roomcounter
                        Break
                    }Else {
                        $global:ActionMessage = "De deur zit op slot, je kunt er nu niet door." #If the door is locked, display this
                        Break
                    }
                }Else {
                $global:ActionMessage = "Die kant kan je niet op." #If the exit is not present, display this
                Break
                }
            }
        }
        {1..10 -contains $_}{ #This hits for the numbers 1 through 10
            If($_ -le $($Global:MenuOptions.length)){ #Do this if the number entered is less than or equal to the length of the array MenuOptios
                $MenuOptionString = $_ #Catch the menu input to a string variable
                [int]$MenuOptionInteger = [convert]::ToInt32($MenuOptionString, 10) #Convert the string variable to an int32 (base 10) variable
                
                $selectedRoomoption = $RoomOptions | where {$_.Argument -eq $WriteOGDOptionMenuSplat[$MenuOptionInteger - 1]}
                Invoke-Command -ScriptBlock $selectedRoomoption.Invoke -NoNewScope
                $global:ActionMessage = $selectedRoomoption.ActionMessage

            } Else{
            $global:ActionMessage = "Ongeldig commando, probeer het nog eens." #Do this if the number entered is greater than the length of the array MenuOptions
            }
        break
        }
        default{
        $global:ActionMessage = "Ongeldig commando, probeer het nog eens." #Do this if the entered option isn't hit by any of the rules
        }
    }

    $state | set-state
}