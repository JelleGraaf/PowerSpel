function Invoke-Room040600 {
    $Global:RoomNumber = ([string]$MyInvocation.MyCommand).Substring(11) #Create a string (from the Function title) of 6 digits which represent the room number, to be used by other functions.

    $InvokeOGDRoomSplat = @{ #Create a hashtable to be used to give arguments to the function Invoke-OGDRoom in a readable format.
        RoomNumber = $RoomNumber #This is the room number, doh :).
        RoomTitle = '[Loods]' #This is the room title.
        RoomDescription = "De loods van OGD wordt gebruikt voor opslag van van alles: draadkarren vol met fris en bier, stellingkasten vol marketingmateriaal en oude CRT-TV's. Een groot rolluik in de zuidelijke muur leidt naar buiten en het lijkt erop dat deze met een druk op de knop open kan. In de noordelijke muur zit ook een deur, met een paslezer ernaast." #This is the room description.
        Exits = @{
            N = @(04,07,00) #Which room is located to the north. Use "(N)" for a locked door.
            "(E)" = @(05,06,00) #Which room is located to the north. Use "(E)" for a locked door.
            #S = @(04,05,00) #Which room is located to the north. Use "(S)" for a locked door.
            #W = @(00,00,00) #Which room is located to the north. Use "(W)" for a locked door.
            #U = @(00,00,00) #Which room is located to the north. Use "(U)" for a locked door.
            #D = @(00,00,00) #Which room is located to the north. Use "(D)" for a locked door.
       }
        ActionMessageNorth = "Je loopt door de geforceerde deur de serverruimte binnen."
        ActionMessageEast = "Je loopt richting het oosten."
        ActionMessageSouth = "Je loopt door het open rolluik naar buiten, richting het zuiden."
        ActionMessageWest = "Je loopt richting het westen."
        ActionMessageUp = "Je loopt de trap op naar boven."
        ActionMessageDown = "Je loopt de trap af naar beneden."
        RoomOptions = @( #Create array of options
            @{ #Create hashtable with options properties
                Argument      = 'Druk op de bedieningsknop van het rolluik.' #Use to display an action in the menu
                Type          = 'Item' #Use to specify that this object is an item
                Test          = {$state.room.'040600'.'loodsdeuropen' -eq $false} #Use to check if the item is present (define in room.json)
                Invoke        = {$state.room.'040600'.'loodsdeuropen' = $true}
                ActionMessage = 'Je drukt op de bedieningsknop van het rolluik en het rolluik gaat open.' #Use to fill the ActionMessage
                Description   = 'Aan de wand naast de loodsdeur zit een knop om het rolluik te openen en sluiten.' #Use to display the item in the room
            }
        ) 
    } #End InvokeOGDRoomSplat

    #Change room properties when the loodsdeur is open
    If ($state.room.'040600'.loodsdeuropen -eq $true) {
        #Change behavior of northern exit
        $InvokeOGDRoomSplat.Exits.S = @(04,05,00)

        #Add extra option to the room
        $InvokeOGDRoomSplat.RoomOptions = @( #Create array of options
            @{ #Create hashtable with options properties
                Argument      = 'Druk op de bedieningsknop van het rolluik.' #Use to display an action in the menu
                Type          = 'Item' #Use to specify that this object is an item
                Test          = {$state.room.'040600'.'loodsdeuropen' -eq $true} #Use to check if the item is present (define in room.json)
                Invoke        = {$state.room.'040600'.'loodsdeuropen' = $false}
                ActionMessage = 'Je drukt op de bedieningsknop van het rolluik en het rolluik gaat weer dicht.' #Use to fill the ActionMessage
                Description   = 'Aan de wand naast de loodsdeur zit een knop om het rolluik te openen en sluiten.' #Use to display the item in the room
            } #End hashtable with options properties
        ) #End array of options
    } #End if

    #Do this only when you didn't open the serverdeur yet.
    If ($state.room.'040600'.serverdeuropen -eq $false) {
        #Change behavior of northern exit
        $InvokeOGDRoomSplat.Exits.N = @(04,06,00)
        $InvokeOGDRoomSplat.ActionMessageNorth = "Je toegangspasje werkt niet op deze deur! Er zit vast iets belangrijks achter."

        #Add extra option to the room
        $InvokeOGDRoomSplat.RoomOptions += @( #Create array of options
            @{ #Create hashtable with options properties
                Argument      = 'Probeer de deur in de noordelijke muur op een andere manier open te krijgen' #Use to display an action in the menu
                Type          = 'Item' #Use to specify that this object is an item
                Test          = {$state.room.'040600'.'serverdeuropen' -eq $false} #Use to check if the item is present (define in room.json)
                Invoke        = {Invoke-OGDDialog-ServerdeurDicht}
                ActionMessage = 'Je gaat voor de deur staan en bedenkt dat het tijd is voor out of the box thinking. Je hebt een paar ideeën.' #Use to fill the ActionMessage
                Description   = 'De deur in de noordelijke muur gaat niet open met je toegangspas. Misschien lukt het op een andere manier...' #Use to display the item in the room
            } #End hashtable with options properties
        ) #End array of options

    } #End if

    Invoke-OGDRoom @InvokeOGDRoomSplat #Start the room writing function, with the above array of items as arguments.
}
