function Invoke-Room050802 {
    $Global:RoomNumber = ([string]$MyInvocation.MyCommand).Substring(11) #Create a string (from the Function title) of 6 digits which represent the room number, to be used by other functions.

    $InvokeOGDRoomSplat = @{ #Create a hashtable to be used to give arguments to the function Invoke-OGDRoom in a readable format.
        RoomNumber = $RoomNumber #This is the room number, doh :).
        RoomTitle = '[Interne Automatisering]' #This is the room title.
        RoomDescription = 'In deze hoek van de grote open ruimte zitten de dappere mensen die de interne automatisering van OGD draaiende houden. Aan de muur hangt een scherm met veel rood en groen, blijkbaar om de status van dingen aan te geven.' #This is the room description.
        Exits = @{
            #N = @(00,00,02) #Which room is located to the north. Use "(N)" for a locked door.
            E = @(06,08,02) #Which room is located to the north. Use "(E)" for a locked door.
            S = @(05,07,02) #Which room is located to the north. Use "(S)" for a locked door.
            #W = @(00,00,02) #Which room is located to the north. Use "(W)" for a locked door.
            #U = @(00,00,02) #Which room is located to the north. Use "(U)" for a locked door.
            #D = @(00,00,02) #Which room is located to the north. Use "(D)" for a locked door.
       }
        ActionMessageNorth = "Je loopt richting het noorden."
        ActionMessageEast = "Je loopt richting het oosten."
        ActionMessageSouth = "Je loopt richting het zuiden."
        ActionMessageWest = "Je loopt richting het westen."
        ActionMessageUp = "Je loopt de trap op naar boven."
        ActionMessageDown = "Je loopt de trap af naar beneden."     
        RoomOptions = @( 
            @{ #Create hashtable with options properties
                Argument      = 'Loop naar het onvergrendelde werkstation' #Use to display an action in the menu
                Type          = 'Item' #Use to specify that this object is an item
                Test          = {$State.room."050802".paniek -eq $true} #Use to check if the item is present (define in room.json)
                Invoke        = {Invoke-OGDDialog-OpenPCIA} #Use to remove the item from the room and add it to inventory
                ActionMessage = 'Je maakt gebruik van de consternatie en gaat naast het onvergrendelde werkstation staan.' #Use to fill the ActionMessage
                Description   = 'Er is lichte paniek. Mensen lopen zenuwachtig in het rond en roepen dingen als "alles is down". ' #Use to display the item in the room
            } #End hashtable
        ) #End RoomOptions  
    }

    #If there is a panic, add a line to the room description
    If ($State.room."050802".paniek -eq $true) {
        $InvokeOGDRoomSplat.RoomDescription = $InvokeOGDRoomSplat.RoomDescription + " Alle mensen van IA staan bij één PC. Een PC aan het eind van het bureau-eiland is onbeheerd en niet vergrendeld..."
    }

    Invoke-OGDRoom @InvokeOGDRoomSplat #Start the room writing function, with the above array of items as arguments.
}
