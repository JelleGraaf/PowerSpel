# use this file to define global variables on module scope
# or perform other initialization procedures.

#load module persistent settings
$ModuleData = @{}

$ModuleDataFolder = Join-Path $PSScriptRoot 'Data'

$ModuleVariablesFolders = get-childitem -path $ModuleDataFolder -Filter 'datajson.*' -Directory

#construct persistent settings variable
foreach($ModuleVariablesFolder in $ModuleVariablesFolders){
  $DataName = $ModuleVariablesFolder.name.Split('.')[1]
  $ModuleData.$DataName = @{}
  $ModuleDataFiles = get-childitem -Path $ModuleVariablesFolder.fullname -Filter '*.json'
  foreach($moduledatafile in $moduledatafiles){
    $DataSubject = $moduledatafile.baseName
    $ModuleData.$DataName.$DataSubject = get-content $ModuleDataFile.fullname | ConvertFrom-Json
  }
}


$moduleManifestName = Split-Path $PSScriptRoot -Leaf
$moduleManifestFilename = "{0}.psd1" -f $moduleManifestName
$ModuleManifestFilePath = Join-Path $PSScriptRoot $moduleManifestFilename
$moduleData.version = (Test-ModuleManifest -Path $ModuleManifestFilePath).version

#check for statefile if not exists
$ModuleProgramDataFolder = Join-Path -Path $env:APPDATA -ChildPath $ModuleData.general.paths.ModuleDataFolderName
$StateFilename = "${env:USERDOMAIN}_${env:username}_${env:computername}_state.xml"
$ModuleStateFilePath = Join-Path -Path $ModuleProgramDataFolder -ChildPath $StateFilename
    
if(-not (Test-Path $ModuleProgramDataFolder -PathType Container))
{
  New-Item $ModuleProgramDataFolder -ItemType Directory -Force
}
     
if(-not (Test-Path $ModuleStateFilePath -PathType Leaf))
{
  $StateObj = [pscustomobject]@{
    UserDomain = ${env:USERDOMAIN}
    UserName   = ${env:username}
    Computer   = ${env:computername}
    state      = [pscustomobject]@{
      Counter = @{}
      Location = @()
      Room = @{}
      Map = @{}
      Self = @{}
      LastAction = get-date
    }
  }
  Export-Clixml -Path $ModuleStateFilePath -InputObject $StateObj -Depth 20
}

$ModuleRoot = $PSScriptRoot #define moduleroot for roomcounter
    


    


  