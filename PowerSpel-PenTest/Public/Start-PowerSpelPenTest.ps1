function Start-PowerSpelPentest 
{
  [CmdletBinding(SupportsShouldProcess = $true,
      ConfirmImpact = 'High'
  )]
  [Alias()]
  param(
    #no parameters
  )
  #Setup State
  $InformationPreference = 'Continue'
  $StateValidated = $false
  try
  {
    $State = Get-state
#    if(@($State.location).count -eq 3) ###SAVEGAME OPTION DELETED
#    {
#      $continueCaption = 'Save game found' 
#      $continueQuery   = 'Do you want to continue this game from {0}' -f $State.lastaction
#      $ContinueCurrentSave = $PSCmdlet.ShouldContinue($continueQuery,$continueCaption)
#      if($ContinueCurrentSave){$StateValidated = $true}else
#      {
        $CreateNewSaveCaption = 'Create New Game.' -f $State.lastaction
#        $CreateNewSaveQuery   = 'Creating a new game overwrites the old game, are you sure you want to continue?'
#        $CreateNewSave = $PSCmdlet.ShouldContinue($CreateNewSaveQuery,$CreateNewSaveCaption)
#        if($CreateNewSave)
#        {
#          Initialize-State
#          $StateValidated = $true
#        }
#      }
#    }
#    else
#    {
      Initialize-State
      $StateValidated = $true
#    } ###SAVEGAME OPTION SUSPENDED
    if(-not $StateValidated){Write-Information -MessageData 'No SaveGame Selected' -InformationAction Continue}
  }
  catch{Write-Error -Message "could not initialize SaveGame Data: $_"}

  #run game
  $global:RoomCounter = 1 # Set roomcounter to 1, to be used by functions and count the moves in the game
  $global:ActionMessage = "" # Pepare variable to show actions in the game
  $AMSSD = ( # Define multiple ActionMessages to be randomly used in the SSD area
  "Je pakt je telefoon uit je zak, kijkt er even op, knikt en loopt door.",
  "Je probeert onopvallend door te lopen.",
  "Zonder dat iemand je verdenkt, loop je verder door de ruimte.",
  "Je knikt vriendelijk naar één van de OGD'ers en loopt verder naar de bureau's verderop.",
  "Je loopt snel door, voordat iemand je in de gaten krijgt.",
  "Met een blik alsof je hier al jaren werkt, begeef je je door de ruimte.",
  "Je zwaait naar een denkbeeldig iemand verderop in de ruimte en loopt die kant op."
  )

  if($StateValidated)
  {
    try
    {
      while($true)
      {
        clear-host
        show-header
        
        $room = Get-Room 
        Invoke-Room -Room $room

        $state = Get-State
        if($state.location[0] -eq 99 -and
           $state.location[1] -eq 99 -and
           $state.location[2] -eq 98) #arbitraire cancel locatie
        {
          Write-Information -MessageData 'spel afgebroken'
          break
        }
        if($state.location[0] -eq 99 -and
           $state.location[1] -eq 99 -and
           $state.location[2] -eq 99) #arbitraire einde locatie
        {
          Write-Information -MessageData 'The End'
          break
        }
        $locatie = $nieuweLocatie
      }
    }
    catch{Write-Error -Message "game ended unexpectedly: $_"}
  }
}
